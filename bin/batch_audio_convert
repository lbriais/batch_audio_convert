#!/usr/bin/env ruby

################################################################################
# BatchAudioConvert
#
# Copyright (c) 2013-2015 L.Briais under MIT license
# http://opensource.org/licenses/MIT
################################################################################

require 'easy_app_helper'
require 'batch_audio_convert'


class BatchAudioConvertApp

  include EasyAppHelper
  include BatchAudioConvert

  APP_NAME = 'batch_audio_convert'

  def initialize
    # Providing this data is optional but brings better logging and online help
    config.describes_application(app_name: APP_NAME, app_version: VERSION, app_description: DESCRIPTION)
    add_cmd_line_options
  end

  def main
    begin
      logger.info 'Application is now started.'
      logger.debug "Config layer ->\n#{config.detailed_layers_info}"
      logger.debug "Merged config ->#{config[].to_yaml}"
      raise 'No source has been provided !!' unless  config[:source]
      raise 'No destination has been provided !!' unless  config[:destination]
    rescue => e
      logger.fatal 'Parameters not correctly provided: ' + e.message
      puts config.command_line_help
      puts e.message
      exit
    end
    begin
      if config[:help]
        puts config.command_line_help
        exit 0
      end
      process_files build_file_list
    rescue => e
      puts "Program aborted with message: '#{e.message}'."
      if config[:debug]
        logger.fatal "#{e.message}\nBacktrace:\n#{e.backtrace.join("\n\t")}"
      else
        puts '  Use --debug option for more detail.'
      end
    end

  end

  def add_cmd_line_options
    config.add_command_line_section do |slop|
      # Enables to override ogg quality from command line
      slop.on :q, 'ogg-quality', 'Defines encoding quality for OGG files.', argument: true, as: Integer
      # Enables to override mp3 quality from command line
      slop.on :b, 'mp3-quality', 'Defines encoding quality (bitrate) for MP3 files.', argument: true, as: Integer
      # Should we override files
      slop.on :f, :force, 'Forces files override.', argument: false
    end
  end

  DESCRIPTION = <<DESCR
This application batch-transforms audio files from your central media library from one 
format to another. It basically takes the assumption that the audio library is already 
correctly organized in two levels directory structure that could be:
- artist/album
- various/compil
Nevertheless the files or directories specified could be located anywhere. Only the 
structure is assumed.

It actually replicates the original structure and copies all the tags (handled by taglib)
to the generated audio files.

Currently only manages FLAC to OGG and FLAC to MP3, all other files are copied untouched.
DESCR

end


# Here we start
BatchAudioConvertApp.new.main
